<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring-2.18.1.xsd">
    <bean
        class="org.apache.camel.component.servlet.CamelHttpTransportServlet" id="camelHttpTransportServlet"/>
    <bean
        class="org.apache.camel.component.hystrix.metrics.servlet.HystrixEventStreamServlet" id="hystrixEventStreamServlet"/>
    <bean
        class="org.springframework.boot.web.servlet.ServletRegistrationBean" id="servlet">
        <property name="name" value="CamelServlet"/>
        <property name="servlet" ref="camelHttpTransportServlet"/>
        <property name="urlMappings" value="/demos/*"/>
    </bean>
    <bean
        class="org.springframework.boot.web.servlet.ServletRegistrationBean" id="hystrixservlet">
        <property name="name" value="HystrixServlet"/>
        <property name="servlet" ref="hystrixEventStreamServlet"/>
        <property name="urlMappings" value="/hystrix.stream"/>
    </bean>
    <camelContext id="camelContext-a73e7fe1-456e-4e15-9926-fae906325f11" xmlns="http://camel.apache.org/schema/spring">
        <restConfiguration apiContextPath="api-docs" bindingMode="json"
            component="servlet" contextPath="/demos" enableCORS="true">
            <apiProperty key="cors" value="true"/>
            <apiProperty key="api.title" value="FIS Gateway"/>
            <apiProperty key="api.version" value="1.0.0"/>
            <corsHeaders key="Access-Control-Allow-Origin" value="*"/>
            <corsHeaders key="Access-Control-Allow-Methods" value="GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH"/>
            <corsHeaders key="Access-Control-Allow-Headers" value="Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"/>
        </restConfiguration>
        <rest id="sourcegateway" path="/sourcegateway">
            <description>Banking Gateway</description>
            <get id="rest-get-balance" uri="balance/{acctid}">
                <to id="_to-get-balance" uri="direct:getbalance"/>
            </get>
            <get id="rest-get-profile" uri="profile/{acctid}">
                <to id="_to-get-profile" uri="direct:getprofile"/>
            </get>
            <get id="rest-get-logo" uri="logo">
                <to id="_to-get-logo" uri="direct:getlogo"/>
            </get>
            <post id="rest-post-transfer" uri="transfer">
                <to id="_to-do-transfer" uri="direct:dotransfer"/>
            </post>
            <post id="rest-post-tranferwithjson" uri="transferwithjson">
                <to id="_to-transferwithjson" uri="direct:transferwithjson"/>
            </post>
        </rest>
        <route id="gatewaybalance">
            <from id="get-balance" uri="direct:getbalance"/>
            <log id="_do-balance" message="do balance ${header.acctid} ${header.moneysource}"/>
            <removeHeaders id="_removeHeaders1" pattern="Camel*"/>
            <setHeader headerName="CamelHttpMethod" id="_setHeader1">
                <constant>GET</constant>
            </setHeader>
            <choice id="choose-destination">
                <when id="when-bitcoin">
                    <simple>${header.moneysource} == 'bitcoin'</simple>
                    <log id="bitcoin-it-is" message="Bitcoin it is!"/>
                    <hystrix id="circuit-breaker-1">
                        <hystrixConfiguration
                            circuitBreakerSleepWindowInMilliseconds="10000" executionTimeoutInMilliseconds="5000"/>
                        <recipientList id="recipient-list-1">
                            <simple>{{blockchain-url}}/demos/bitcoinaccount/balance/${header.acctid}?bridgeEndpoint=true</simple>
                        </recipientList>
                        <onFallback id="on-fall-back-1">
                            <to id="to-do-no-response-1" uri="direct:doNoresponse"/>
                        </onFallback>
                    </hystrix>
                    <convertBodyTo id="convert-to-string-1" type="java.lang.String"/>
                    <unmarshal id="transform-to-json-1">
                        <json library="Jackson"/>
                    </unmarshal>
                    <log id="print-body" message="${body}"/>
                </when>
                <otherwise id="otherwise">
                    <log id="traditional-it-is" message="Traditional money source"/>
                    <hystrix id="circuit-breaker-2">
                        <hystrixConfiguration
                            circuitBreakerSleepWindowInMilliseconds="10000" executionTimeoutInMilliseconds="5000"/>
                        <recipientList id="recipient-list-2">
                            <simple>{{bank-url}}/demos/account/profile/${header.acctid}?bridgeEndpoint=true</simple>
                        </recipientList>
                        <convertBodyTo id="convert-to-string-2" type="java.lang.String"/>
                        <unmarshal id="transform-to-json-2">
                            <json library="Jackson"/>
                        </unmarshal>
                        <setBody id="enrich-body">
                            <simple>Account ${header.acctid} has balance of :${body['balance']}</simple>
                        </setBody>
                        <onFallback id="_onFallback2">
                            <to id="to-do-no-response-2" uri="direct:doNoresponse"/>
                        </onFallback>
                    </hystrix>
                </otherwise>
            </choice>
        </route>
        <route id="gatewaytransfer">
            <from id="do-transfer" uri="direct:dotransfer"/>
            <log id="print-action" message="do balance ${header.acctid} ${header.amt} ${header.recptid} ${header.moneysource}"/>
            <removeHeaders id="clean-headers" pattern="Camel*"/>
            <setHeader headerName="CamelHttpMethod" id="_setHeader8">
                <constant>GET</constant>
            </setHeader>
            <choice id="_choose-destination">
                <when id="_when-bitcoin">
                    <simple>${header.moneysource} == 'bitcoin'</simple>
                    <log id="print-bitcoin-transfer" message="Bitcoin transfer ${header.acctid}/${header.amt}/${header.recptid}"/>
                    <hystrix id="circuit-breaker-3">
                        <hystrixConfiguration
                            circuitBreakerSleepWindowInMilliseconds="10000" executionTimeoutInMilliseconds="5000"/>
                        <recipientList id="_recipientList3">
                            <simple>{{blockchain-url}}/demos/bitcoinaccount/transfer/${header.acctid}/${header.amt}/${header.recptid}?bridgeEndpoint=true</simple>
                        </recipientList>
                        <convertBodyTo id="_convert-to-string" type="java.lang.String"/>
                        <log id="_print-body" message="${body}"/>
                        <onFallback id="_on-fall-back">
                            <to id="_to-do-no-response" uri="direct:doNoresponse"/>
                        </onFallback>
                    </hystrix>
                </when>
                <otherwise id="_otherwise-2">
                    <log id="print-traditional-transfer" message="Traditional banking ${header.acctid}/${header.amt}/${header.recptid}"/>
                    <hystrix id="circuit-breaker-4">
                        <hystrixConfiguration
                            circuitBreakerSleepWindowInMilliseconds="10000" executionTimeoutInMilliseconds="5000"/>
                        <recipientList id="_recipientList4">
                            <simple>{{bank-url}}/demos/account/transfer/${header.acctid}/${header.amt}/${header.recptid}?bridgeEndpoint=true</simple>
                        </recipientList>
                        <convertBodyTo id="convert-to-string-4" type="java.lang.String"/>
                        <unmarshal id="_unmarshal-json">
                            <json library="Jackson"/>
                        </unmarshal>
                        <setBody id="_enrich-body">
                            <simple>Transfer completed, account ${header.acctid} has balance of :${body['balance']}</simple>
                        </setBody>
                        <onFallback id="_on-fall-back-2">
                            <to id="_to-do-no-response-2" uri="direct:doNoresponse"/>
                        </onFallback>
                    </hystrix>
                </otherwise>
            </choice>
        </route>
        <route id="_getprofileroute">
            <from id="get-profile" uri="direct:getprofile"/>
            <removeHeaders id="_clean-camel-headers" pattern="Camel*"/>
            <setHeader headerName="CamelHttpMethod" id="_set-get-header">
                <constant>GET</constant>
            </setHeader>
            <choice id="circuit-breaker-5">
                <when id="_bitcoin-5">
                    <simple>${header.moneysource} == 'bitcoin'</simple>
                    <setBody id="_bitcoin-not-support">
                        <constant>Bitcoin does not support profile</constant>
                    </setBody>
                </when>
                <otherwise id="_otherwise-5">
                    <hystrix id="_circuit-breaker">
                        <hystrixConfiguration
                            circuitBreakerSleepWindowInMilliseconds="10000" executionTimeoutInMilliseconds="5000"/>
                        <recipientList id="_recipientList5">
                            <simple>{{bank-url}}/demos/account/profile/${header.acctid}?bridgeEndpoint=true</simple>
                        </recipientList>
                        <convertBodyTo id="convert-body-to-string" type="java.lang.String"/>
                        <onFallback id="_onFallback5">
                            <to id="_handelerro05" uri="direct:doNoresponse"/>
                        </onFallback>
                    </hystrix>
                </otherwise>
            </choice>
        </route>
        <route id="noresponseroute">
            <from id="noresponse" uri="direct:doNoresponse"/>
            <log id="_log10" message="Fallback because backend services not responding"/>
            <setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="_setHeader2">
                <constant>503</constant>
            </setHeader>
            <setBody id="_setBody3">
                <constant>"End Service not available try again later"</constant>
            </setBody>
        </route>
        <route id="transferwithjsonroute">
            <from id="noresponse" uri="direct:transferwithjson"/>
            <log id="_log11" message="${body}"/>
            <marshal id="_marshal1">
                <json library="Jackson" prettyPrint="true"/>
            </marshal>
            <setHeader headerName="acctid" id="_setHeader4">
                <jsonpath>acctid</jsonpath>
            </setHeader>
            <setHeader headerName="amt" id="_setHeader5">
                <jsonpath>amt</jsonpath>
            </setHeader>
            <setHeader headerName="recptid" id="_setHeader6">
                <jsonpath>recptid</jsonpath>
            </setHeader>
            <setHeader headerName="moneysource" id="_setHeader7">
                <jsonpath>moneysource</jsonpath>
            </setHeader>
            <log id="_log12" message="moneysource-- ${headers.moneysource}, acctid-- ${headers.acctid}, recepid-- {headers.recptid}, amt-- {headers.amt}"/>
            <to id="_to1" uri="direct:dotransfer"/>
        </route>
        <route id="logoroute">
            <from id="logostarts" uri="direct:getlogo"/>
            <log id="_log13" message="Get Logo color"/>
            <setBody id="_setBody5">
                <constant>blue</constant>
            </setBody>
        </route>
    </camelContext>
</beans>
